To check for session status and handle sign out using onAuthStateChange, you can set up a listener that responds to authentication state changes. This listener will notify you whenever the user's authentication state changes, allowing you to clear cookies or perform other actions when the user signs out.

Hereâ€™s an example of how to implement this in JavaScript:

import { supabase } from './supabaseClient';

const handleAuthStateChange = () => {
  supabase.auth.onAuthStateChange((event, session) => {
    if (event === 'SIGNED_OUT') {
      console.log('User has signed out. Clearing cookies...');
      // Clear cookies or perform any other necessary cleanup
    } else if (event === 'SIGNED_IN') {
      console.log('User is signed in:', session.user);
    }
  });
};

// Call this function to start listening for auth state changes
handleAuthStateChange();

In this example, the onAuthStateChange method listens for authentication events. When the event is SIGNED_OUT, you can clear cookies or perform any necessary cleanup actions. This approach helps you maintain the correct session state in your application.